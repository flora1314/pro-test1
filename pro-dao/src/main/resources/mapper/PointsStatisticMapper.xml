<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dmall.cem.dao.PointsStatisticMapper" >
  <resultMap id="BaseResultMap" type="com.dmall.cem.domain.PointsStatistic" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="statistic_date" property="statisticDate" jdbcType="DATE" />
    <result column="platform" property="platform" jdbcType="INTEGER" />
    <result column="vender_id" property="venderId" jdbcType="BIGINT" />
    <result column="vender_name" property="venderName" jdbcType="VARCHAR" />
    <result column="store_id" property="storeId" jdbcType="BIGINT" />
    <result column="store_name" property="storeName" jdbcType="VARCHAR" />
    <result column="user_level" property="userLevel" jdbcType="INTEGER" />
    <result column="billing_points" property="billingPoints" jdbcType="BIGINT" />
    <result column="used_points" property="usedPoints" jdbcType="BIGINT" />
    <result column="expired_points" property="expiredPoints" jdbcType="BIGINT" />
    <result column="properties" property="properties" jdbcType="VARCHAR" />
    <result column="modified" property="modified" jdbcType="TIMESTAMP" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="yn" property="yn" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, statistic_date, platform, vender_id, vender_name, store_id, store_name, user_level, 
    billing_points, used_points, expired_points, properties, modified, created, yn
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dmall.cem.domain.PointsStatisticQuery" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cem_points_statistic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>

  <select id="selectSumByExample" resultMap="BaseResultMap" parameterType="com.dmall.cem.domain.PointsStatisticQuery" >
    select
    id, statistic_date, platform, vender_id, vender_name, store_id, store_name, user_level, 
    properties, modified, created, yn,
    SUM(billing_points) AS billing_points,
    SUM(used_points) AS used_points,
    SUM(expired_points) AS expired_points
    from cem_points_statistic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="groupBy != null and groupBy != ''" >
        GROUP BY ${groupBy}
    </if>
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from cem_points_statistic
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByExample" parameterType="com.dmall.cem.domain.PointsStatisticQuery" >
    delete from cem_points_statistic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from cem_points_statistic
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.dmall.cem.domain.PointsStatistic" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cem_points_statistic (id, statistic_date, platform, 
      vender_id, vender_name, store_id, 
      store_name, user_level, billing_points, 
      used_points, expired_points, properties, 
      modified, created, yn
      )
    values (null, #{statisticDate,jdbcType=DATE}, #{platform,jdbcType=INTEGER}, 
      #{venderId,jdbcType=BIGINT}, #{venderName,jdbcType=VARCHAR}, #{storeId,jdbcType=BIGINT}, 
      #{storeName,jdbcType=VARCHAR}, #{userLevel,jdbcType=INTEGER}, #{billingPoints,jdbcType=BIGINT}, 
      #{usedPoints,jdbcType=BIGINT}, #{expiredPoints,jdbcType=BIGINT}, #{properties,jdbcType=VARCHAR}, 
      #{modified,jdbcType=TIMESTAMP}, #{created,jdbcType=TIMESTAMP}, #{yn,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dmall.cem.domain.PointsStatistic" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cem_points_statistic
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      <if test="statisticDate != null" >
        statistic_date,
      </if>
      <if test="platform != null" >
        platform,
      </if>
      <if test="venderId != null" >
        vender_id,
      </if>
      <if test="venderName != null" >
        vender_name,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="storeName != null" >
        store_name,
      </if>
      <if test="userLevel != null" >
        user_level,
      </if>
      <if test="billingPoints != null" >
        billing_points,
      </if>
      <if test="usedPoints != null" >
        used_points,
      </if>
      <if test="expiredPoints != null" >
        expired_points,
      </if>
      <if test="properties != null" >
        properties,
      </if>
      <if test="modified != null" >
        modified,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="yn != null" >
        yn,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=BIGINT},
      <if test="statisticDate != null" >
        #{statisticDate,jdbcType=DATE},
      </if>
      <if test="platform != null" >
        #{platform,jdbcType=INTEGER},
      </if>
      <if test="venderId != null" >
        #{venderId,jdbcType=BIGINT},
      </if>
      <if test="venderName != null" >
        #{venderName,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=BIGINT},
      </if>
      <if test="storeName != null" >
        #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="userLevel != null" >
        #{userLevel,jdbcType=INTEGER},
      </if>
      <if test="billingPoints != null" >
        #{billingPoints,jdbcType=BIGINT},
      </if>
      <if test="usedPoints != null" >
        #{usedPoints,jdbcType=BIGINT},
      </if>
      <if test="expiredPoints != null" >
        #{expiredPoints,jdbcType=BIGINT},
      </if>
      <if test="properties != null" >
        #{properties,jdbcType=VARCHAR},
      </if>
      <if test="modified != null" >
        #{modified,jdbcType=TIMESTAMP},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="yn != null" >
        #{yn,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dmall.cem.domain.PointsStatisticQuery" resultType="java.lang.Integer" >
    select count(*) from cem_points_statistic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update cem_points_statistic
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.statisticDate != null" >
        statistic_date = #{record.statisticDate,jdbcType=DATE},
      </if>
      <if test="record.platform != null" >
        platform = #{record.platform,jdbcType=INTEGER},
      </if>
      <if test="record.venderId != null" >
        vender_id = #{record.venderId,jdbcType=BIGINT},
      </if>
      <if test="record.venderName != null" >
        vender_name = #{record.venderName,jdbcType=VARCHAR},
      </if>
      <if test="record.storeId != null" >
        store_id = #{record.storeId,jdbcType=BIGINT},
      </if>
      <if test="record.storeName != null" >
        store_name = #{record.storeName,jdbcType=VARCHAR},
      </if>
      <if test="record.userLevel != null" >
        user_level = #{record.userLevel,jdbcType=INTEGER},
      </if>
      <if test="record.billingPoints != null" >
        billing_points = #{record.billingPoints,jdbcType=BIGINT},
      </if>
      <if test="record.usedPoints != null" >
        used_points = #{record.usedPoints,jdbcType=BIGINT},
      </if>
      <if test="record.expiredPoints != null" >
        expired_points = #{record.expiredPoints,jdbcType=BIGINT},
      </if>
      <if test="record.properties != null" >
        properties = #{record.properties,jdbcType=VARCHAR},
      </if>
      <if test="record.modified != null" >
        modified = #{record.modified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.created != null" >
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.yn != null" >
        yn = #{record.yn,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update cem_points_statistic
    set id = #{record.id,jdbcType=BIGINT},
      statistic_date = #{record.statisticDate,jdbcType=DATE},
      platform = #{record.platform,jdbcType=INTEGER},
      vender_id = #{record.venderId,jdbcType=BIGINT},
      vender_name = #{record.venderName,jdbcType=VARCHAR},
      store_id = #{record.storeId,jdbcType=BIGINT},
      store_name = #{record.storeName,jdbcType=VARCHAR},
      user_level = #{record.userLevel,jdbcType=INTEGER},
      billing_points = #{record.billingPoints,jdbcType=BIGINT},
      used_points = #{record.usedPoints,jdbcType=BIGINT},
      expired_points = #{record.expiredPoints,jdbcType=BIGINT},
      properties = #{record.properties,jdbcType=VARCHAR},
      modified = #{record.modified,jdbcType=TIMESTAMP},
      created = #{record.created,jdbcType=TIMESTAMP},
      yn = #{record.yn,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dmall.cem.domain.PointsStatistic" >
    update cem_points_statistic
    <set >
      <if test="statisticDate != null" >
        statistic_date = #{statisticDate,jdbcType=DATE},
      </if>
      <if test="platform != null" >
        platform = #{platform,jdbcType=INTEGER},
      </if>
      <if test="venderId != null" >
        vender_id = #{venderId,jdbcType=BIGINT},
      </if>
      <if test="venderName != null" >
        vender_name = #{venderName,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=BIGINT},
      </if>
      <if test="storeName != null" >
        store_name = #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="userLevel != null" >
        user_level = #{userLevel,jdbcType=INTEGER},
      </if>
      <if test="billingPoints != null" >
        billing_points = #{billingPoints,jdbcType=BIGINT},
      </if>
      <if test="usedPoints != null" >
        used_points = #{usedPoints,jdbcType=BIGINT},
      </if>
      <if test="expiredPoints != null" >
        expired_points = #{expiredPoints,jdbcType=BIGINT},
      </if>
      <if test="properties != null" >
        properties = #{properties,jdbcType=VARCHAR},
      </if>
      <if test="modified != null" >
        modified = #{modified,jdbcType=TIMESTAMP},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="yn != null" >
        yn = #{yn,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dmall.cem.domain.PointsStatistic" >
    update cem_points_statistic
    set statistic_date = #{statisticDate,jdbcType=DATE},
      platform = #{platform,jdbcType=INTEGER},
      vender_id = #{venderId,jdbcType=BIGINT},
      vender_name = #{venderName,jdbcType=VARCHAR},
      store_id = #{storeId,jdbcType=BIGINT},
      store_name = #{storeName,jdbcType=VARCHAR},
      user_level = #{userLevel,jdbcType=INTEGER},
      billing_points = #{billingPoints,jdbcType=BIGINT},
      used_points = #{usedPoints,jdbcType=BIGINT},
      expired_points = #{expiredPoints,jdbcType=BIGINT},
      properties = #{properties,jdbcType=VARCHAR},
      modified = #{modified,jdbcType=TIMESTAMP},
      created = #{created,jdbcType=TIMESTAMP},
      yn = #{yn,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>